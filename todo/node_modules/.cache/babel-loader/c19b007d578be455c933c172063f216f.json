{"ast":null,"code":"var _jsxFileName = \"/home/miltner/todo/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      if (this.props.todo.completed) {\n        return {\n          textDecoration: 'line-through'\n        };\n      } else {\n        return {\n          textDecoration: 'none'\n        };\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: this.getStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.todo.title));\n  }\n\n} //PropTypes\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["/home/miltner/todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","props","todo","completed","textDecoration","render","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SACpCG,QADoC,GACzB,MAAM;AACb,UAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAnB,EAA8B;AAC1B,eAAO;AACHC,UAAAA,cAAc,EAAE;AADb,SAAP;AAGH,OAJD,MAIO;AACH,eAAO;AACHA,UAAAA,cAAc,EAAE;AADb,SAAP;AAGH;AACJ,KAXmC;AAAA;;AAYpCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAE,KAAKL,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBI,KAApB,CADJ,CADJ;AAKH;;AAlBmC,C,CAqBxC;;AACAP,QAAQ,CAACQ,SAAT,GAAqB;AACjBL,EAAAA,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AADN,CAArB;AAIA,eAAeV,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        if(this.props.todo.completed) {\n            return {\n                textDecoration: 'line-through'\n            } \n        } else {\n            return {\n                textDecoration: 'none'\n            }\n        }\n    }\n    render() {\n        return (\n            <div style={this.getStyle}>\n                <p>{this.props.todo.title}</p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n  }\n\nexport default TodoItem\n\n"]},"metadata":{},"sourceType":"module"}